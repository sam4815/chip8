{"version":3,"sources":["assets/random.svg","utilities/instructions.js","utilities/decodeOpcode.js","utilities/sprites.js","hooks/useCPU.js","hooks/useKeyboard.js","hooks/useRenderer.js","hooks/useSpeaker.js","App.js","index.js"],"names":["_path","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgRandom","_ref","svgRef","title","titleId","props","height","viewBox","width","xmlns","ref","id","d","ForwardRef","INSTRUCTIONS","CLS","pattern","operation","state","_","renderer","clear","RET","stack","pc","slice","JP_ADDR","nnn","CALL_ADDR","concat","SE_Vx_BYTE","x","kk","v","SNE_Vx_BYTE","SE_Vx_Vy","y","LD_Vx_BYTE","ADD_Vx_BYTE","LD_Vx_Vy","OR_Vx_Vy","AND_Vx_Vy","XOR_Vx_Vy","ADD_Vx_Vy","sum","SUB_Vx_Vy","SHR_Vx_Vy","SUBN_Vx_Vy","SHL_Vx_Vy","SNE_Vx_Vy","LD_I_ADDR","JP_V0_ADDR","RND_Vx_BYTE","randomByte","Math","floor","random","DRW_Vx_Vy_NIBBLE","n","row","sprite","memory","col","val","setPixel","SKP_Vx","keyboard","isKeyPressed","SKNP_Vx","LD_Vx_DT","delayTimer","LD_Vx_K","newState","paused","setOnNextKeyPress","LD_DT_Vx","LD_ST_Vx","soundTimer","ADD_I_Vx","LD_F_Vx","LD_B_Vx","toString","padStart","split","map","digit","Number","forEach","idx","LD_I_Vx","bit","LD_Vx_I","decodeOpcode","opcode","entries","find","toUpperCase","match","instruction","SPRITES","INITIAL_STATE","Uint8Array","Array","speed","debugMode","useCPU","speaker","useRef","useState","intervalId","setIntervalId","cycle","current","executeInstruction","max","play","draw","data","console","log","start","newIntervalId","setInterval","stop","clearInterval","isRunning","Boolean","loadRom","rom","program","toggleLogging","KEYMAP","useKeyboard","pressed","setPressed","onNextKeyPress","useEffect","onKeyDown","keyCode","undefined","draft","onKeyUp","window","addEventListener","removeEventListener","CHIP_8_WIDTH","init2DArray","m","from","useRenderer","theme","canvasRef","display","smoothing","scale","canvasTheme","canvas","context","getContext","style","offsetWidth","fillStyle","background","fillRect","fill","pixelBuffer","some","ceil","unshift","pop","collision","toggleSmoothing","useSpeaker","audio","AudioContext","webkitAudioContext","soundBuffers","playing","fetchSounds","Promise","all","fetch","process","request","arrayBuffer","decodeAudioData","buffers","createBufferSource","buffer","connect","destination","setTimeout","Content","Layout","Sider","Item","Menu","SubMenu","FullPageLayout","styled","Main","LIGHT_THEME","DARK_THEME","App","setTheme","cpu","roms","setRoms","fetchAllRoms","response","json","startUpSequence","logoRom","ibmRom","brickRom","res","siderTheme","color","isLight","collapsible","defaultCollapsed","overflow","mode","icon","RocketOutlined","marginTop","onClick","setRandomRom","Icon","component","Random","BgColorsOutlined","getRandomColour","setRandomTheme","ToolOutlined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66c8a44e.chunk.js","sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRandom(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 1792,\n    viewBox: \"0 0 1792 1792\",\n    width: 1792,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m666 481q-60 92-137 273-22-45-37-72.5t-40.5-63.5-51-56.5-63-35-81.5-14.5h-224q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h224q250 0 410 225zm1126 799q0 14-9 23l-320 320q-9 9-23 9-13 0-22.5-9.5t-9.5-22.5v-192q-32 0-85 .5t-81 1-73-1-71-5-64-10.5-63-18.5-58-28.5-59-40-55-53.5-56-69.5q59-93 136-273 22 45 37 72.5t40.5 63.5 51 56.5 63 35 81.5 14.5h256v-192q0-14 9-23t23-9q12 0 24 10l319 319q9 9 9 23zm0-896q0 14-9 23l-320 320q-9 9-23 9-13 0-22.5-9.5t-9.5-22.5v-192h-256q-48 0-87 15t-69 45-51 61.5-45 77.5q-32 62-78 171-29 66-49.5 111t-54 105-64 100-74 83-90 68.5-106.5 42-128 16.5h-224q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h224q48 0 87-15t69-45 51-61.5 45-77.5q32-62 78-171 29-66 49.5-111t54-105 64-100 74-83 90-68.5 106.5-42 128-16.5h256v-192q0-14 9-23t23-9q12 0 24 10l319 319q9 9 9 23z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRandom);\nexport default __webpack_public_path__ + \"static/media/random.074fa30e.svg\";\nexport { ForwardRef as ReactComponent };","const INSTRUCTIONS = {\n  // Clear the display\n  CLS: {\n    pattern: /^E0$/,\n    operation: (state, _, { renderer }) => {\n      renderer.clear();\n      return state;\n    },\n  },\n\n  // Return from a subroutine\n  RET: {\n    pattern: /^EE$/,\n    // Set the program counter to the address at the top of the stack, then subtract 1 from the stack pointer\n    operation: ({ stack, ...state }) => ({\n      ...state,\n      pc: stack[stack.length - 1],\n      stack: stack.slice(0, -1),\n    }),\n  },\n\n  // Jump to location nnn\n  JP_ADDR: {\n    pattern: /1[A-F0-9][A-F0-9][A-F0-9]/,\n    operation: (state, { nnn }) => ({\n      ...state,\n      pc: nnn,\n    }),\n  },\n\n  // Call subroutine at nnn\n  CALL_ADDR: {\n    pattern: /2[A-F0-9][A-F0-9][A-F0-9]/,\n    // Put the current PC on the top of the stack, then set the PC to nnn.\n    operation: (state, { nnn }) => ({\n      ...state,\n      stack: state.stack.concat(state.pc),\n      pc: nnn,\n    }),\n  },\n\n  // Skip next instruction if Vx = kk\n  SE_Vx_BYTE: {\n    pattern: /3[A-F0-9][A-F0-9][A-F0-9]/,\n    operation: (state, { x, kk }) => ({\n      ...state,\n      pc: state.v[x] === kk ? state.pc + 2 : state.pc,\n    }),\n  },\n\n  // Skip next instruction if Vx != kk\n  SNE_Vx_BYTE: {\n    pattern: /4[A-F0-9][A-F0-9][A-F0-9]/,\n    operation: (state, { x, kk }) => ({\n      ...state,\n      pc: state.v[x] !== kk ? state.pc + 2 : state.pc,\n    }),\n  },\n\n  // Skip next instruction if Vx = Vy\n  SE_Vx_Vy: {\n    pattern: /5[A-F0-9][A-F0-9]0/,\n    operation: (state, { x, y }) => ({\n      ...state,\n      pc: state.v[x] === state.v[y] ? state.pc + 2 : state.pc,\n    }),\n  },\n\n  // Set Vx = kk\n  LD_Vx_BYTE: {\n    pattern: /6[A-F0-9][A-F0-9][A-F0-9]/,\n    operation: ({ v, ...state }, { x, kk }) => {\n      v[x] = kk;\n      return { ...state, v };\n    },\n  },\n\n  // Set Vx = Vx + kk\n  ADD_Vx_BYTE: {\n    pattern: /7[A-F0-9][A-F0-9][A-F0-9]/,\n    operation: ({ v, ...state }, { x, kk }) => {\n      v[x] = kk + v[x];\n      return { ...state, v };\n    },\n  },\n\n  // Set Vx = Vy\n  LD_Vx_Vy: {\n    pattern: /8[A-F0-9][A-F0-9]0/,\n    operation: ({ v, ...state }, { x, y }) => {\n      v[x] = v[y];\n      return { ...state, v };\n    },\n  },\n\n  // Set Vx = Vx OR Vy\n  OR_Vx_Vy: {\n    pattern: /8[A-F0-9][A-F0-9]1/,\n    operation: ({ v, ...state }, { x, y }) => {\n      v[x] = v[x] | v[y];\n      return { ...state, v };\n    },\n  },\n\n  // Set Vx = Vx AND Vy\n  AND_Vx_Vy: {\n    pattern: /8[A-F0-9][A-F0-9]2/,\n    operation: ({ v, ...state }, { x, y }) => {\n      v[x] = v[x] & v[y];\n      return { ...state, v };\n    },\n  },\n\n  // Set Vx = Vx XOR Vy\n  XOR_Vx_Vy: {\n    pattern: /8[A-F0-9][A-F0-9]3/,\n    operation: ({ v, ...state }, { x, y }) => {\n      v[x] = v[x] ^ v[y];\n      return { ...state, v };\n    },\n  },\n\n  // Set Vx = Vx + Vy, set VF = carry\n  ADD_Vx_Vy: {\n    pattern: /8[A-F0-9][A-F0-9]4/,\n    operation: ({ v, ...state }, { x, y }) => {\n      const sum = v[x] + v[y];\n      v[0xf] = sum > 0xff ? 1 : 0;\n      v[x] = sum;\n      return { ...state, v };\n    },\n  },\n\n  // Set Vx = Vx - Vy, set VF = NOT borrow\n  SUB_Vx_Vy: {\n    pattern: /8[A-F0-9][A-F0-9]5/,\n    operation: ({ v, ...state }, { x, y }) => {\n      const sum = v[x] - v[y];\n      v[0xf] = sum > 0x0 ? 1 : 0;\n      v[x] = sum;\n      return { ...state, v };\n    },\n  },\n\n  // Set Vx = Vx SHR 1\n  SHR_Vx_Vy: {\n    pattern: /8[A-F0-9][A-F0-9]6/,\n    // If the least-significant bit of Vx is 1, then set VF to 1, otherwise 0. Then divide Vx by 2\n    operation: ({ v, ...state }, { x }) => {\n      v[0xf] = v[x] & 0x1;\n      v[x] = v[x] >> 1;\n      return { ...state, v };\n    },\n  },\n\n  // Set Vx = Vy - Vx, set VF = NOT borrow\n  SUBN_Vx_Vy: {\n    pattern: /8[A-F0-9][A-F0-9]7/,\n    operation: ({ v, ...state }, { x, y }) => {\n      const sum = v[y] - v[x];\n      v[0xf] = sum > 0x0 ? 1 : 0;\n      v[x] = sum;\n      return { ...state, v };\n    },\n  },\n\n  // Set Vx = Vx SHL 1\n  SHL_Vx_Vy: {\n    pattern: /8[A-F0-9][A-F0-9]E/,\n    // If the most-significant bit of Vx is 1, then set VF to 1, otherwise 0. Then multiply Vx by 2\n    operation: ({ v, ...state }, { x }) => {\n      v[0xf] = v[x] >> 7;\n      v[x] = v[x] << 1;\n      return { ...state, v };\n    },\n  },\n\n  // Skip next instruction if Vx != Vy\n  SNE_Vx_Vy: {\n    pattern: /9[A-F0-9][A-F0-9]0/,\n    operation: (state, { x, y }) => ({\n      ...state,\n      pc: state.v[x] !== state.v[y] ? state.pc + 2 : state.pc,\n    }),\n  },\n\n  // Set I = nnn\n  LD_I_ADDR: {\n    pattern: /A[A-F0-9][A-F0-9][A-F0-9]/,\n    operation: (state, { nnn }) => ({\n      ...state,\n      i: nnn,\n    }),\n  },\n\n  // Jump to location nnn + V0\n  JP_V0_ADDR: {\n    pattern: /B[A-F0-9][A-F0-9][A-F0-9]/,\n    operation: (state, { nnn }) => ({\n      ...state,\n      pc: nnn + state.v[0x0],\n    }),\n  },\n\n  // Set Vx = random byte AND kk\n  RND_Vx_BYTE: {\n    pattern: /C[A-F0-9][A-F0-9][A-F0-9]/,\n    operation: ({ v, ...state }, { x, kk }) => {\n      const randomByte = Math.floor(Math.random() * 0xff);\n      v[x] = kk & randomByte;\n      return { ...state, v };\n    },\n  },\n\n  // Display n-byte sprite starting at memory location I at (Vx, Vy), set VF = collision\n  DRW_Vx_Vy_NIBBLE: {\n    pattern: /D[A-F0-9][A-F0-9][A-F0-9]/,\n    operation: ({ v, ...state }, { x, y, n: height }, { renderer }) => {\n      v[0xf] = 0;\n\n      for (let row = 0; row < height; row++) {\n        const sprite = state.memory[state.i + row];\n\n        for (let col = 0; col < 8; col++) {\n          const val = sprite & (1 << (7 - col)) ? 1 : 0;\n          const pixelErased = renderer.setPixel(v[x] + col, v[y] + row, val);\n          if (pixelErased) v[0xf] = 1;\n        }\n      }\n\n      return { ...state, v };\n    },\n  },\n\n  // Skip next instruction if key with the value of Vx is pressed\n  SKP_Vx: {\n    pattern: /E[A-F0-9]9E/,\n    operation: (state, { x }, { keyboard }) => ({\n      ...state,\n      pc: keyboard.isKeyPressed(state.v[x]) ? state.pc + 2 : state.pc,\n    }),\n  },\n\n  // Skip next instruction if key with the value of Vx is not pressed\n  SKNP_Vx: {\n    pattern: /E[A-F0-9]A1/,\n    operation: (state, { x }, { keyboard }) => ({\n      ...state,\n      pc: keyboard.isKeyPressed(state.v[x]) ? state.pc : state.pc + 2,\n    }),\n  },\n\n  // Set Vx = delay timer value\n  LD_Vx_DT: {\n    pattern: /F[A-F0-9]07/,\n    operation: ({ v, ...state }, { x }) => {\n      v[x] = state.delayTimer;\n      return { ...state, v };\n    },\n  },\n\n  // Wait for a key press, store the value of the key in Vx\n  LD_Vx_K: {\n    pattern: /F[A-F0-9]0A/,\n    operation: ({ v, ...state }, { x }, { keyboard }) => {\n      const newState = { ...state, paused: true };\n      keyboard.setOnNextKeyPress(() => (key) => {\n        v[x] = key;\n        newState.v = v;\n        newState.paused = false;\n      });\n      return newState;\n    },\n  },\n\n  // Set delay timer = Vx\n  LD_DT_Vx: {\n    pattern: /F[A-F0-9]15/,\n    operation: (state, { x }) => ({\n      ...state,\n      delayTimer: state.v[x],\n    }),\n  },\n\n  // Set sound timer = Vx\n  LD_ST_Vx: {\n    pattern: /F[A-F0-9]18/,\n    operation: (state, { x }) => ({\n      ...state,\n      soundTimer: state.v[x],\n    }),\n  },\n\n  // Set I = I + Vx\n  ADD_I_Vx: {\n    pattern: /F[A-F0-9]1E/,\n    operation: (state, { x }) => ({\n      ...state,\n      i: state.i + state.v[x],\n    }),\n  },\n\n  // Set I = location of sprite for digit Vx\n  LD_F_Vx: {\n    pattern: /F[A-F0-9]29/,\n    // Multiply by 5 because each sprite is 5 bytes long\n    operation: (state, { x }) => ({\n      ...state,\n      i: state.v[x] * 5,\n    }),\n  },\n\n  // Store BCD representation of Vx in memory locations I, I+1, and I+2\n  LD_B_Vx: {\n    pattern: /F[A-F0-9]33/,\n    operation: ({ memory, ...state }, { x }) => {\n      const BCD = state.v[x]\n        .toString()\n        .padStart(3, '0')\n        .split('')\n        .map((digit) => Number(digit));\n\n      BCD.forEach((digit, idx) => (memory[state.i + idx] = digit));\n      return { ...state, memory };\n    },\n  },\n\n  // Store registers V0 through Vx in memory starting at location I\n  LD_I_Vx: {\n    pattern: /F[A-F0-9]55/,\n    operation: ({ memory, ...state }, { x }) => {\n      state.v\n        .slice(0, x + 1)\n        .forEach((bit, idx) => (memory[state.i + idx] = bit));\n      return { ...state, memory };\n    },\n  },\n\n  // Read registers V0 through Vx from memory starting at location I\n  LD_Vx_I: {\n    pattern: /F[A-F0-9]65/,\n    operation: ({ v, ...state }, { x }) => {\n      state.memory\n        .slice(state.i, state.i + x + 1)\n        .forEach((bit, idx) => (v[idx] = bit));\n      return { ...state, v };\n    },\n  },\n};\n\nexport default INSTRUCTIONS;\n","import INSTRUCTIONS from './instructions';\n\nconst decodeOpcode = (opcode) => {\n  // Lowest 12 bits of the instruction\n  const nnn = opcode & 0xfff;\n  // Lowest 8 bits of the instruction\n  const kk = opcode & 0xff;\n  // Nibbles\n  const x = (opcode & 0x0f00) >> 8;\n  const y = (opcode & 0x00f0) >> 4;\n  const n = opcode & 0x000f;\n\n  const [instruction] = Object.entries(INSTRUCTIONS).find(([, { pattern }]) =>\n    opcode.toString(16).toUpperCase().match(pattern)\n  );\n\n  return { instruction, nnn, kk, x, y, n };\n};\n\nexport default decodeOpcode;\n","const SPRITES = [\n  0xf0,\n  0x90,\n  0x90,\n  0x90,\n  0xf0, // 0\n  0x20,\n  0x60,\n  0x20,\n  0x20,\n  0x70, // 1\n  0xf0,\n  0x10,\n  0xf0,\n  0x80,\n  0xf0, // 2\n  0xf0,\n  0x10,\n  0xf0,\n  0x10,\n  0xf0, // 3\n  0x90,\n  0x90,\n  0xf0,\n  0x10,\n  0x10, // 4\n  0xf0,\n  0x80,\n  0xf0,\n  0x10,\n  0xf0, // 5\n  0xf0,\n  0x80,\n  0xf0,\n  0x90,\n  0xf0, // 6\n  0xf0,\n  0x10,\n  0x20,\n  0x40,\n  0x40, // 7\n  0xf0,\n  0x90,\n  0xf0,\n  0x90,\n  0xf0, // 8\n  0xf0,\n  0x90,\n  0xf0,\n  0x10,\n  0xf0, // 9\n  0xf0,\n  0x90,\n  0xf0,\n  0x90,\n  0x90, // A\n  0xe0,\n  0x90,\n  0xe0,\n  0x90,\n  0xe0, // B\n  0xf0,\n  0x80,\n  0x80,\n  0x80,\n  0xf0, // C\n  0xe0,\n  0x90,\n  0x90,\n  0x90,\n  0xe0, // D\n  0xf0,\n  0x80,\n  0xf0,\n  0x80,\n  0xf0, // E\n  0xf0,\n  0x80,\n  0xf0,\n  0x80,\n  0x80, // F\n];\n\nexport default SPRITES;\n","import { useRef, useState } from 'react';\nimport { INSTRUCTIONS, SPRITES, decodeOpcode } from '../utilities';\n\nconst INITIAL_STATE = {\n  memory: new Uint8Array(4096),\n  v: new Uint8Array(16),\n  i: 0,\n  delayTimer: 0,\n  soundTimer: 0,\n  pc: 0x200,\n  stack: new Array(),\n  paused: false,\n  speed: 10,\n  debugMode: false,\n};\n\nconst useCPU = (renderer, keyboard, speaker) => {\n  const state = useRef({ ...INITIAL_STATE });\n  const [intervalId, setIntervalId] = useState(null);\n\n  const reset = () => {\n    state.current = { ...INITIAL_STATE };\n  };\n\n  const loadRom = (rom) => {\n    reset();\n\n    // Load sprites into memory\n    for (let i = 0; i < SPRITES.length; i++) {\n      state.current.memory[i] = SPRITES[i];\n    }\n\n    const program = new Uint8Array(rom);\n    const memoryStart = 0x200;\n\n    for (let i = 0; i < program.length; i++) {\n      state.current.memory[memoryStart + i] = program[i];\n    }\n  };\n\n  const updateTimers = () => {\n    state.current.delayTimer = Math.max(state.current.delayTimer - 1, 0);\n    state.current.soundTimer = Math.max(state.current.soundTimer - 1, 0);\n  };\n\n  const nextInstruction = () => {\n    state.current.pc = state.current.pc + 2;\n  };\n\n  const cycle = () => {\n    for (let i = 0; i < state.current.speed; i++) {\n      const { memory, pc, paused } = state.current;\n      if (paused) continue;\n\n      // Combine two pieces of 8-bit memory to get full 16-bit opcode\n      const opcode = (memory[pc] << 8) | (memory[pc + 1] << 0);\n      nextInstruction();\n      executeInstruction(opcode);\n    }\n\n    if (!state.current.paused) updateTimers();\n    if (state.current.soundTimer > 0) speaker.play();\n    renderer.draw();\n  };\n\n  const executeInstruction = (opcode) => {\n    const { instruction, ...data } = decodeOpcode(opcode);\n    const { operation } = INSTRUCTIONS[instruction];\n\n    if (state.current.debugMode) console.log(instruction, data);\n\n    state.current = operation(state.current, data, {\n      keyboard,\n      renderer,\n      speaker,\n    });\n  };\n\n  const start = () => {\n    if (intervalId) return;\n\n    const newIntervalId = setInterval(cycle, 20);\n    setIntervalId(newIntervalId);\n  };\n\n  const stop = () => {\n    clearInterval(intervalId);\n    setIntervalId(null);\n  };\n\n  const isRunning = () => Boolean(intervalId);\n\n  const toggleLogging = () => {\n    state.current.debugMode = !state.current.debugMode;\n  };\n\n  return { start, stop, isRunning, loadRom, toggleLogging };\n};\n\nexport default useCPU;\n","import { useEffect, useState } from 'react';\n\nconst KEYMAP = {\n  49: 0x1, // 1\n  50: 0x2, // 2\n  51: 0x3, // 3\n  52: 0xc, // 4\n  81: 0x4, // Q\n  87: 0x5, // W\n  69: 0x6, // E\n  82: 0xd, // R\n  65: 0x7, // A\n  83: 0x8, // S\n  68: 0x9, // D\n  70: 0xe, // F\n  90: 0xa, // Z\n  88: 0x0, // X\n  67: 0xb, // C\n  86: 0xf, // V\n};\n\nconst useKeyboard = () => {\n  const [pressed, setPressed] = useState([]);\n  const [onNextKeyPress, setOnNextKeyPress] = useState(null);\n\n  const isKeyPressed = (key) => pressed[key];\n\n  useEffect(() => {\n    const onKeyDown = ({ keyCode }) => {\n      const key = KEYMAP[keyCode];\n      if (key === undefined) return;\n\n      setPressed((draft) => {\n        draft[key] = true;\n        return draft;\n      });\n\n      if (onNextKeyPress !== null) {\n        onNextKeyPress(key);\n        setOnNextKeyPress(null);\n      }\n    };\n\n    const onKeyUp = ({ keyCode }) => {\n      const key = KEYMAP[keyCode];\n      if (key === undefined) return;\n\n      setPressed((draft) => {\n        draft[key] = false;\n        return draft;\n      });\n    };\n\n    window.addEventListener('keydown', onKeyDown, false);\n    window.addEventListener('keyup', onKeyUp, false);\n\n    return () => {\n      window.removeEventListener('keydown', onKeyDown, false);\n      window.removeEventListener('keyup', onKeyUp, false);\n    };\n  }, [onNextKeyPress]);\n\n  return { isKeyPressed, setOnNextKeyPress };\n};\n\nexport default useKeyboard;\n","import { useEffect, useRef } from 'react';\n\nconst CHIP_8_HEIGHT = 32;\nconst CHIP_8_WIDTH = 64;\n\nconst init2DArray = (n, m) =>\n  Array.from({ length: n }).map(() =>\n    Array.from({ length: m }).map(() => [0, 0, 0])\n  );\n\nconst useRenderer = (theme) => {\n  const canvasRef = useRef(null);\n  const display = useRef(init2DArray(CHIP_8_WIDTH, CHIP_8_HEIGHT));\n  const smoothing = useRef(true);\n  const scale = useRef(1);\n  const canvasTheme = useRef(theme);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    canvas.style.width = '100%';\n    scale.current = canvas.offsetWidth / CHIP_8_WIDTH;\n\n    context.canvas.width = CHIP_8_WIDTH * scale.current;\n    context.canvas.height = CHIP_8_HEIGHT * scale.current;\n  }, [canvasRef]);\n\n  useEffect(() => {\n    canvasTheme.current = theme;\n  }, [theme]);\n\n  const setPixel = (x, y, val) => {\n    x = x % CHIP_8_WIDTH;\n    y = y % CHIP_8_HEIGHT;\n\n    const collision = display.current[x][y][0] & val;\n    display.current[x][y][0] ^= val;\n    return collision;\n  };\n\n  const clear = () => {\n    display.current = init2DArray(CHIP_8_WIDTH, CHIP_8_HEIGHT);\n  };\n\n  const draw = () => {\n    const context = canvasRef.current.getContext('2d');\n    context.fillStyle = canvasTheme.current.background;\n    context.fillRect(\n      0,\n      0,\n      CHIP_8_WIDTH * scale.current,\n      CHIP_8_HEIGHT * scale.current\n    );\n\n    context.fillStyle = canvasTheme.current.fill;\n\n    display.current.forEach((row, x) =>\n      row.forEach((pixelBuffer, y) => {\n        const frames = smoothing.current\n          ? pixelBuffer\n          : pixelBuffer.slice(0, 1);\n\n        if (frames.some(Boolean)) {\n          context.fillRect(\n            x * scale.current,\n            y * scale.current,\n            Math.ceil(scale.current + 1),\n            Math.ceil(scale.current + 1)\n          );\n        }\n\n        display.current[x][y].unshift(pixelBuffer[0]);\n        display.current[x][y].pop();\n      })\n    );\n  };\n\n  const toggleSmoothing = () => {\n    smoothing.current = !smoothing.current;\n  };\n\n  return { ref: canvasRef, draw, setPixel, clear, toggleSmoothing };\n};\n\nexport default useRenderer;\n","import { useEffect, useRef } from 'react';\n\nconst useSpeaker = () => {\n  const audio = useRef(\n    new (window.AudioContext || window.webkitAudioContext)()\n  );\n  const soundBuffers = useRef([]);\n  const playing = useRef(false);\n\n  useEffect(() => {\n    const fetchSounds = async () => {\n      const buffers = await Promise.all(\n        Array.from({ length: 3 }).map(async (_, i) => {\n          const request = await fetch(\n            `${process.env.PUBLIC_URL}/mallet${i + 1}.mp3`\n          );\n          const arrayBuffer = await request.arrayBuffer();\n          return audio.current.decodeAudioData(arrayBuffer);\n        })\n      );\n\n      soundBuffers.current = buffers;\n    };\n\n    fetchSounds();\n  }, []);\n\n  const play = () => {\n    if (playing.current || !audio.current) return;\n\n    const source = audio.current.createBufferSource();\n    const buffers = soundBuffers.current;\n    source.buffer = buffers[Math.floor(Math.random() * buffers.length)];\n    source.connect(audio.current.destination);\n    source.start();\n\n    playing.current = true;\n    setTimeout(() => (playing.current = false), 100);\n  };\n\n  return { play };\n};\n\nexport default useSpeaker;\n","import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport color from 'tinycolor2';\nimport { Layout, Menu } from 'antd';\nimport 'antd/dist/antd.css';\nimport Icon, {\n  BgColorsOutlined,\n  ToolOutlined,\n  RocketOutlined,\n} from '@ant-design/icons';\nimport { ReactComponent as Random } from './assets/random.svg';\nimport { useKeyboard, useSpeaker, useRenderer, useCPU } from './hooks';\n\nconst { Content, Sider } = Layout;\nconst { Item, SubMenu } = Menu;\n\nconst FullPageLayout = styled(Layout)`\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n`;\n\nconst Main = styled(Content)`\n  display: flex;\n  align-items: center;\n  height: 100%;\n`;\n\nconst LIGHT_THEME = {\n  fill: '#FFFFFF',\n  background: '#EAD7D7',\n};\n\nconst DARK_THEME = {\n  fill: '#b4e5af',\n  background: '#000000',\n};\n\nconst App = () => {\n  // UI hooks\n  const [theme, setTheme] = useState(DARK_THEME);\n\n  // Emulator hooks\n  const keyboard = useKeyboard();\n  const speaker = useSpeaker();\n  const renderer = useRenderer(theme);\n  const cpu = useCPU(renderer, keyboard, speaker);\n\n  const [roms, setRoms] = useState([]);\n\n  useEffect(() => {\n    const fetchAllRoms = async () => {\n      const response = await fetch(`${process.env.PUBLIC_URL}/roms/index.json`);\n      const roms = await response.json();\n      setRoms(roms);\n      startUpSequence(roms);\n    };\n\n    fetchAllRoms();\n  }, []);\n\n  const loadRom = async (rom) => {\n    renderer.clear();\n\n    const response = await fetch(`${process.env.PUBLIC_URL}/roms/${rom}`);\n    cpu.loadRom(await response.arrayBuffer());\n\n    cpu.start();\n  };\n\n  const setRandomRom = (roms) => {\n    loadRom(roms[Math.floor(Math.random() * roms.length)]);\n  };\n\n  const startUpSequence = async (roms) => {\n    const logoRom = roms.find(\n      (title) => title === 'Chip8 Emulator Logo [Garstyciuks].ch8'\n    );\n    const ibmRom = roms.find((title) => title === 'IBM Logo.ch8');\n    const brickRom = roms.find(\n      (title) => title === 'Brick (Brix hack, 1990).ch8'\n    );\n\n    await new Promise((res) => setTimeout(res, 500));\n\n    loadRom(logoRom);\n    await new Promise((res) => setTimeout(res, 1500));\n\n    loadRom(ibmRom);\n    await new Promise((res) => setTimeout(res, 1500));\n\n    loadRom(brickRom);\n  };\n\n  const setRandomTheme = () => {\n    const getRandomColour = () =>\n      `#${Math.floor(Math.random() * 2 ** 24)\n        .toString(16)\n        .padStart(6, 0)}`;\n\n    setTheme({ fill: getRandomColour(), background: getRandomColour() });\n  };\n\n  const siderTheme = color(theme.background).isLight() ? 'light' : 'dark';\n\n  return (\n    <FullPageLayout>\n      <Sider\n        width=\"250px\"\n        collapsible\n        defaultCollapsed={true}\n        theme={siderTheme}\n        style={{ overflow: 'auto' }}\n      >\n        <Menu theme={siderTheme} mode=\"inline\">\n          <SubMenu\n            key=\"games\"\n            icon={<RocketOutlined />}\n            title=\"Games\"\n            style={{ marginTop: '20px' }}\n          >\n            <Item key=\"randomrom\" onClick={() => setRandomRom(roms)}>\n              <Icon component={Random} /> Random\n            </Item>\n            {roms.map((rom) => (\n              <Item key={rom} onClick={() => loadRom(rom)}>\n                {rom.match(/[^.]+/)}\n              </Item>\n            ))}\n          </SubMenu>\n          <SubMenu key=\"themes\" icon={<BgColorsOutlined />} title=\"Themes\">\n            <Item key=\"randomtheme\" onClick={() => setRandomTheme()}>\n              <Icon component={Random} /> Random\n            </Item>\n            <Item key=\"dark\" onClick={() => setTheme(DARK_THEME)}>\n              Dark\n            </Item>\n            <Item key=\"light\" onClick={() => setTheme(LIGHT_THEME)}>\n              Light\n            </Item>\n          </SubMenu>\n          <SubMenu key=\"devtools\" icon={<ToolOutlined />} title=\"Dev Tools\">\n            {cpu.isRunning() ? (\n              <Item key=\"pause\" onClick={() => cpu.stop()}>\n                Pause\n              </Item>\n            ) : (\n              <Item key=\"resume\" onClick={() => cpu.start()}>\n                Resume\n              </Item>\n            )}\n            <Item key=\"console\" onClick={() => cpu.toggleLogging()}>\n              Toggle Console Logging\n            </Item>\n            <Item key=\"smoothing\" onClick={() => renderer.toggleSmoothing()}>\n              Toggle Smoothing\n            </Item>\n          </SubMenu>\n        </Menu>\n      </Sider>\n      <Layout>\n        <Main style={{ background: theme.background }}>\n          <canvas ref={renderer.ref} />\n        </Main>\n      </Layout>\n    </FullPageLayout>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}